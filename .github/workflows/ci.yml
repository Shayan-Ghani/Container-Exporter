name: CI

on:
  push:
    paths-ignore:
      - '**.md'
      - 'extra/**'
      - 'capture/**'
      - 'ansible/**'
      - 'dashboards/**'
      - 'scripts/**'
      - '.gitignore'
      - 'LICENSE'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'extra/**'
      - 'capture/**'
      - 'ansible/**'
      - 'dashboards/**'
      - 'scripts/**'
      - '.gitignore'
      - 'LICENSE'

permissions:
  contents: write
  pull-requests: read

env:
  ghcr_repo_addr: ghcr.io/shayan-ghani/container-exporter:latest
  docker_hub_addr: shayanghani/container-exporter:latest
  docker_hub_user: shayanghani
  
jobs:
  
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.docker_hub_user }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }} 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Build and export to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{env.ghcr_repo_addr}}
            ${{env.docker_repo_addr}}



  probe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: deploy
        run: |
          docker compose -f ./container-exporter-local.yml up --build -d
        
      - name: probe metrics api and print out metrics
        run: |
          bash ./scripts/healthcheck-ci.sh


  # test:
    
  # ## pytest to be implemented here ...
          
  release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: probe
    steps:
      - 
        name: Bump version and push tag
        id: bump
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch


      - name: Create Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          body: ${{ steps.bump.outputs.changelog }}
          tag_name: ${{ steps.bump.outputs.new_tag }}